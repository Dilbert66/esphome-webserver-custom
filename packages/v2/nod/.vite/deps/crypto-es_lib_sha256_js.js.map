{
  "version": 3,
  "sources": ["../../../../../node_modules/crypto-es/lib/sha256.js"],
  "sourcesContent": ["import {\n  WordArray,\n  Hasher,\n} from './core.js';\n\n// Initialization and round constants tables\nconst H = [];\nconst K = [];\n\n// Compute constants\nconst isPrime = (n) => {\n  const sqrtN = Math.sqrt(n);\n  for (let factor = 2; factor <= sqrtN; factor += 1) {\n    if (!(n % factor)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nconst getFractionalBits = n => ((n - (n | 0)) * 0x100000000) | 0;\n\nlet n = 2;\nlet nPrime = 0;\nwhile (nPrime < 64) {\n  if (isPrime(n)) {\n    if (nPrime < 8) {\n      H[nPrime] = getFractionalBits(n ** (1 / 2));\n    }\n    K[nPrime] = getFractionalBits(n ** (1 / 3));\n\n    nPrime += 1;\n  }\n\n  n += 1;\n}\n\n// Reusable object\nconst W = [];\n\n/**\n * SHA-256 hash algorithm.\n */\nexport class SHA256Algo extends Hasher {\n  _doReset() {\n    this._hash = new WordArray(H.slice(0));\n  }\n\n  _doProcessBlock(M, offset) {\n    // Shortcut\n    const _H = this._hash.words;\n\n    // Working variables\n    let a = _H[0];\n    let b = _H[1];\n    let c = _H[2];\n    let d = _H[3];\n    let e = _H[4];\n    let f = _H[5];\n    let g = _H[6];\n    let h = _H[7];\n\n    // Computation\n    for (let i = 0; i < 64; i += 1) {\n      if (i < 16) {\n        W[i] = M[offset + i] | 0;\n      } else {\n        const gamma0x = W[i - 15];\n        const gamma0 = ((gamma0x << 25) | (gamma0x >>> 7))\n          ^ ((gamma0x << 14) | (gamma0x >>> 18))\n          ^ (gamma0x >>> 3);\n\n        const gamma1x = W[i - 2];\n        const gamma1 = ((gamma1x << 15) | (gamma1x >>> 17))\n          ^ ((gamma1x << 13) | (gamma1x >>> 19))\n          ^ (gamma1x >>> 10);\n\n        W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n      }\n\n      const ch = (e & f) ^ (~e & g);\n      const maj = (a & b) ^ (a & c) ^ (b & c);\n\n      const sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n      const sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7) | (e >>> 25));\n\n      const t1 = h + sigma1 + ch + K[i] + W[i];\n      const t2 = sigma0 + maj;\n\n      h = g;\n      g = f;\n      f = e;\n      e = (d + t1) | 0;\n      d = c;\n      c = b;\n      b = a;\n      a = (t1 + t2) | 0;\n    }\n\n    // Intermediate hash value\n    _H[0] = (_H[0] + a) | 0;\n    _H[1] = (_H[1] + b) | 0;\n    _H[2] = (_H[2] + c) | 0;\n    _H[3] = (_H[3] + d) | 0;\n    _H[4] = (_H[4] + e) | 0;\n    _H[5] = (_H[5] + f) | 0;\n    _H[6] = (_H[6] + g) | 0;\n    _H[7] = (_H[7] + h) | 0;\n  }\n\n  _doFinalize() {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n\n    const nBitsTotal = this._nDataBytes * 8;\n    const nBitsLeft = data.sigBytes * 8;\n\n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - (nBitsLeft % 32));\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n    data.sigBytes = dataWords.length * 4;\n\n    // Hash final blocks\n    this._process();\n\n    // Return final computed hash\n    return this._hash;\n  }\n\n  clone() {\n    const clone = super.clone.call(this);\n    clone._hash = this._hash.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.SHA256('message');\n *     var hash = CryptoJS.SHA256(wordArray);\n */\nexport const SHA256 = Hasher._createHelper(SHA256Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacSHA256(message, key);\n */\nexport const HmacSHA256 = Hasher._createHmacHelper(SHA256Algo);\n"],
  "mappings": "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",
  "names": ["n"]
}
